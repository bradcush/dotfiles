version: 2
log-file: /tmp/efm.log
log-level: 1
root-markers:
  - .git/

tools:
  eslint: &eslint
    lint-command: './node_modules/.bin/eslint -f visualstudio --stdin --stdin-filename ${INPUT}'
    lint-ignore-exit-code: true
    lint-stdin: true
    lint-formats:
      - "%f(%l,%c): %tarning %m"
      - "%f(%l,%c): %rror %m"
    format-stdin: true
    root-markers:
      - .git/

  lua-lua-format: &lua-lua-format
    format-command: 'lua-format -i'
    format-stdin: true

  markdown-markdownlint: &markdown-markdownlint
    lint-command: 'markdownlint -s'
    lint-stdin: true
    lint-formats:
      - '%f:%l %m'
      - '%f:%l:%c %m'
      - '%f: %l: %m'

  markdown-pandoc: &markdown-pandoc
    format-command: 'pandoc -f markdown -t gfm --tab-stop=2 --wrap=preserve'

  prettier: &prettier
    format-command: './node_modules/.bin/prettier'

  html-prettier: &html-prettier
    format-command: './node_modules/.bin/prettier ${--tab-width:tabWidth} ${--single-quote:singleQuote} --parser html'

  css-prettier: &css-prettier
    format-command: './node_modules/.bin/prettier ${--tab-width:tabWidth} ${--single-quote:singleQuote} --parser css'

  # json-prettier: &json-prettier
  #   format-command: './node_modules/.bin/prettier ${--tab-width:tabWidth} --parser json'

  python-black: &python-black
    format-command: 'black --quiet -'
    format-stdin: true

languages:
  css:
    - <<: *css-prettier

  html:
    - <<: *html-prettier

  javascript:
    - <<: *eslint
    - <<: *prettier

  javascriptreact:
    - <<: *eslint
    - <<: *prettier

  javascript.jsx:
    - <<: *eslint
    - <<: *prettier

  # json:
    # - <<: *json-jq
    # - <<: *json-fixjson
    # - <<: *json-prettier

  lua:
    - <<: *lua-lua-format

  # markdown:
    # - <<: *markdown-markdownlint
    # - <<: *markdown-pandoc

  python:
    - <<: *python-black

  typescript:
    - <<: *eslint
    - <<: *prettier

  typescriptreact:
    - <<: *eslint
    - <<: *prettier

  typescript.tsx:
    - <<: *eslint
    - <<: *prettier
